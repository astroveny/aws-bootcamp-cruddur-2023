
tasks:
  - name: aws-sam
    before: |
      cd /workspace
      wget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
      unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
      sudo ./sam-installation/install
      cd $THEIA_WORKSPACE_ROOT
  - name: aws-cli  
    env:
      AWS_CLI_AUTO_PROMPT: on-partial
    before: |
      cd /workspace
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
      gp sync-done awscli 

  - name: aws-configure
    init: gp sync-await awscli
    before: |
      aws configure set format json
      sudo echo -e -n "region = us-east-1" >> ~/.aws/config
      sudo echo -e "[bashbc]\naws_access_key_id = \naws_secret_access_key = " >> ~/.aws/credentials     

  - name: cfn 
    before: |
      pip install cfn-lint 
      cargo install cfn-guard
      gem install cfn-toml
  
  - name: react-js
    command: |
      cd $THEIA_WORKSPACE_ROOT
      ./bin/frontend/generate-env
      cd frontend-react-js
      npm i
  - name: flask
    command: |
      cd $THEIA_WORKSPACE_ROOT
      ./bin/backend/generate-env
      cd backend-flask
      pip install -r requirements.txt
      cd $THEIA_WORKSPACE_ROOT
      echo "READY!"

  - name: postgres
    before: |
      curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
      echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
      sudo apt update
      sudo apt install -y postgresql-client-13 libpq-dev
    command: |
      export GITPOD_IP="$(curl ifconfig.me)"
      

  - name: cdk
    before: |
      npm install aws-cdk -g
      cd thumbing-serverless-cdk
      cp .env.cdk .env
      npm i
      cd $THEIA_WORKSPACE_ROOT

  - name: aws 
    command: |  
      source "$THEIA_WORKSPACE_ROOT/backend-flask/bin/rds/rds-update-sg-rule"
      source "$THEIA_WORKSPACE_ROOT/backend-flask/bin/rds/rds-status"  
      bash bin/aws/ecr-login
  
vscode:
  extensions:
    - 42Crunch.vscode-openapi
    - cweijan.vscode-postgresql-client2

ports: 
  - name: frontend 
    port: 3000
    onOpen: open-browser
    visibility: public 
  - name: backend
    port: 4567
    visibility: public
  - name: xray-daemon
    port: 2000
    visibility: public
